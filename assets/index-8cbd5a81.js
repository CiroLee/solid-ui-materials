import{i as n,b as l,S as t,c as u,s as j,t as r,a as x}from"./index-6b0d3471.js";const q=r('<a decoration-none text-gray relative hover:text-blue target="_blank"><span>'),$=e=>(()=>{const s=q(),a=s.firstChild;return n(a,()=>e.name||"Source"),n(s,l(t,{name:"external-link-line"}),null),u(()=>j(s,"href",`https://github.com/CiroLee/solid-ui-materials/tree/main/src/components/${e.path}`)),s})(),_=$,v={"code-view":"code-view-module_code-view_3AF4z"};const S=r("<div>"),f=e=>(()=>{const s=S();return u(a=>{const i=v["code-view"],o=e.html;return i!==a._v$&&x(s,a._v$=i),o!==a._v$2&&(s.innerHTML=a._v$2=o),a},{_v$:void 0,_v$2:void 0}),s})(),m=f,b=`<pre class="hljs"><code>&lt;<span class="hljs-title class_">SIcon</span> name=<span class="hljs-string">&quot;home-smile-2-line&quot;</span> /&gt;
<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-line&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span> /&gt;</span></span>
<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-line&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;32px&quot;</span> /&gt;</span></span>
</code></pre>
`,I=`<pre class="hljs"><code>&lt;<span class="hljs-title class_">SIcon</span> name=<span class="hljs-string">&quot;home-smile-2-fill&quot;</span> size=<span class="hljs-string">&quot;32px&quot;</span> color=<span class="hljs-string">&quot;blue&quot;</span> /&gt;
<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-fill&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;32px&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;red&quot;</span> /&gt;</span></span>
<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-fill&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;32px&quot;</span> <span class="hljs-attr">gradient</span>=<span class="hljs-string">&quot;linear-gradient(45deg, yellow, green)&quot;</span> /&gt;</span></span>
</code></pre>
`,z=r('<div><div><h3>SIcon图标</h3>SIcon based on<a text-14px text-blue ml-1 href="https://github.com/Remix-Design/RemixIcon" target="-blank">Remixicon</a><h4>图标尺寸</h4><div class="children:mr-2"></div><h4>图标颜色(支持渐变色)</h4><div class="children:mr-2"></div></div><footer mt-12>');function C(){return(()=>{const e=z(),s=e.firstChild,a=s.firstChild,i=a.nextSibling,o=i.nextSibling,g=o.nextSibling,c=g.nextSibling,h=c.nextSibling,p=h.nextSibling,d=s.nextSibling;return n(c,l(t,{name:"home-smile-2-line"}),null),n(c,l(t,{name:"home-smile-2-line",size:"24px"}),null),n(c,l(t,{name:"home-smile-2-line",size:"32px"}),null),n(s,l(m,{html:b}),h),n(p,l(t,{name:"home-smile-2-fill",size:"32px",color:"blue"}),null),n(p,l(t,{name:"home-smile-2-fill",size:"32px",color:"red"}),null),n(p,l(t,{name:"home-smile-2-fill",size:"32px",gradient:"linear-gradient(45deg, yellow, green)"}),null),n(s,l(m,{html:I}),null),n(d,l(_,{path:"SIcon"})),e})()}export{C as default};
