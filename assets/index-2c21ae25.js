import{m as j,a as d,b as g,s as u,t as c,d as m,i as l,c as n,e as x}from"./index-2c494481.js";import{S as y,C as k,a as f}from"./index-d4fca61e.js";const q=c("<div>"),v=h=>{const e=j({type:"flicker",class:"",style:{}},h);return(()=>{const t=q();return d(s=>{const a=`s-Skeleton  s-Skeleton--${e.type} ${e.class}`.replace(/\s{2,}/g," ").trim(),r=e.style;return a!==s._v$&&g(t,s._v$=a),s._v$2=u(t,r,s._v$2),s},{_v$:void 0,_v$2:void 0}),t})()},p=v,w=`<pre class="hljs"><code><span class="hljs-keyword">import</span> { <span class="hljs-keyword">type</span> <span class="hljs-title class_">Component</span>, createSignal } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;solid-js&#x27;</span>;
<span class="hljs-keyword">import</span> <span class="hljs-title class_">Skeleton</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;your path&#x27;</span>;
<span class="hljs-keyword">const</span> <span class="hljs-title class_">App</span>: <span class="hljs-title class_">Component</span> = <span class="hljs-function">() =&gt;</span> {
  <span class="hljs-keyword">const</span> [value, setValue] = <span class="hljs-title function_">createSignal</span>(<span class="hljs-string">&#x27;&#x27;</span>);
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>type: shimmer<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w-300px flex&quot;</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;shimmer&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w-40px h-40px rounded-1/2&quot;</span> /&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;relative ml-12px flex-1 children:mb-10px&quot;</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;shimmer&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;h-14px rounded-4px&quot;</span> /&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;shimmer&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;h-14px rounded-4px&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">width:</span> &#x27;<span class="hljs-attr">80</span>%&#x27; }} /&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>type: flicker<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w-300px flex&quot;</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;flicker&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w-40px h-40px rounded-1/2&quot;</span> /&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;relative ml-12px flex-1 children:mb-10px&quot;</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;flicker&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;h-14px rounded-4px&quot;</span> /&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;flicker&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;h-14px rounded-4px&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">width:</span> &#x27;<span class="hljs-attr">80</span>%&#x27; }} /&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
  );
};

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span>;
</code></pre>
`,_=c("<div flex items-center justify-between><h3>Skeleton</h3><div><span hover:text-blue-600 text-gray cursor-pointer mr-4>code"),$=c("<h4>type: shimmer"),o=c('<div class="w-300px flex"><div class="relative ml-12px flex-1 children:mb-10px">'),S=c("<h4>type: flicker");function D(){const h=[{name:"index.tsx",path:"components/Skeleton/index.tsx"},{name:"index.scss",path:"components/Skeleton/index.scss"}],[e,t]=m(!1);return[(()=>{const s=_(),a=s.firstChild,r=a.nextSibling,i=r.firstChild;return i.$$click=()=>t(!0),l(r,n(y,{path:"Skeleton",name:"source"}),null),s})(),$(),(()=>{const s=o(),a=s.firstChild;return l(s,n(p,{type:"shimmer",class:"w-40px h-40px rounded-1/2"}),a),l(a,n(p,{type:"shimmer",class:"h-14px rounded-4px"}),null),l(a,n(p,{type:"shimmer",class:"h-14px rounded-4px",style:{width:"80%"}}),null),s})(),S(),(()=>{const s=o(),a=s.firstChild;return l(s,n(p,{type:"flicker",class:"w-40px h-40px rounded-1/2"}),a),l(a,n(p,{type:"flicker",class:"h-14px rounded-4px"}),null),l(a,n(p,{type:"flicker",class:"h-14px rounded-4px",style:{width:"80%"}}),null),s})(),n(k,{content:w}),n(f,{get show(){return e()},tabs:h,onCancel:()=>t(!1)})]}x(["click"]);export{D as default};
