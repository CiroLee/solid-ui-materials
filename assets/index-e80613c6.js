import{d as k,b as j,e as y,o as z,f as i,i as l,c as C,a as S,S as L,t as $,u as q,g as A,F as R,h as m,s as T}from"./index-20423b97.js";const E=$('<div class="popup"><div class="popup__mask"></div><div>'),D=n=>{let s,e;const[a,c]=j(!1),[r,_]=j(!1),[g,x]=j(!0),b=()=>{n.maskClosable&&(c(!1),n?.onCancel?.())};return y(()=>{n.show&&(_(!0),x(!1)),setTimeout(()=>{c(n.show)},0)}),y(()=>{n.show&&s&&s.addEventListener("transitionend",function(){!a()&&r()&&x(!0)})}),z(()=>{s&&s.removeEventListener("transitionend",function(){})}),i(L,{get when(){return n.show||!g()},get children(){const u=E(),t=u.firstChild,o=t.nextSibling;t.$$click=b;const h=s;typeof h=="function"?q(h,t):s=t;const p=e;return typeof p=="function"?q(p,o):e=o,l(o,()=>n.children),C(d=>{const w=!!a(),v=`popup__content ${n.placement||"center"}`,f=!!a();return w!==d._v$&&t.classList.toggle("show",d._v$=w),v!==d._v$2&&S(o,d._v$2=v),f!==d._v$3&&o.classList.toggle("show",d._v$3=f),d},{_v$:void 0,_v$2:void 0,_v$3:void 0}),u}})};k(["click"]);const H=n=>navigator.clipboard.writeText(n);var F=n=>{let s=new URLSearchParams;for(let[e,a]of Object.entries(n))s.append(e,a);return s.toString()};async function P(n,s={}){const e=s?.method;let a="",c="";e?.toLowerCase()==="get"&&s.params&&(a="?"+F(s.params)),c=JSON.stringify(s.body);const r=await fetch(n+a,{...s,body:c});return r.status<400?r.json():Promise.reject({status:r.status,msg:r.statusText})}const V=async n=>await P(`https://api.github.com/repos/CiroLee/solid-ui-materials/contents/src/${n}`),K=$('<div flex flex-col w-440px h-full bg-white p-12px overflow-hidden box-border><div flex></div><div flex-1 bg-red mt-3 overflow-auto p-12px rounded-1 relative bg="#2a272b" text-white><div absolute top-2 right-2 text-gray-3 p-4px rounded-1 cursor-pointer transition-all class="hover:bg-gray/40"></div><pre><code>'),N=$("<div inline-flex items-center h-44px px-16px cursor-default border-solid box-border>"),O=n=>{let s=0;const[e,a]=j(""),[c,r]=j(""),[_,g]=j(!1),x=async()=>{const t=[];for(const o of n.tabs){const h=await V(o.path);t.push({...o,code:h.content})}return t},b=t=>{H(t).then(()=>{clearTimeout(s),g(!0),s=window.setTimeout(()=>{g(!1)},500)})},[u]=A(x);return y(()=>{a(u()?.[0].name||"")}),y(()=>{r(window.atob(u()?.find(t=>t.name===e())?.code||""))}),i(D,{get show(){return n.show},maskClosable:!0,placement:"right",get onCancel(){return n.onCancel},get children(){const t=K(),o=t.firstChild,h=o.nextSibling,p=h.firstChild,d=p.nextSibling,w=d.firstChild;return l(o,i(R,{get each(){return u()},children:v=>(()=>{const f=N();return f.$$click=()=>a(v.name),l(f,()=>v.name),C(()=>S(f,`${e()===v.name?"text-black border-0 border-b-2px border-black":"text-gray border-0"} transition-all hover:text-black`)),f})()})),p.$$click=()=>b(c()),l(p,i(m,{get name(){return _()?"check-line":"clipboard-line"},size:"18px"})),l(w,c),t}})},G=O;k(["click"]);const J=$('<a decoration-none text-gray relative hover:text-blue-600 target="_blank"><span>'),M=n=>(()=>{const s=J(),e=s.firstChild;return l(e,()=>n.name||"Source"),l(s,i(m,{name:"external-link-line"}),null),C(()=>T(s,"href",`https://github.com/CiroLee/solid-ui-materials/tree/main/src/components/${n.path}`)),s})(),U=M,B={"code-view":"code-view-module_code-view_3AF4z"};const Q=$("<div>"),W=n=>(()=>{const s=Q();return C(e=>{const a=B["code-view"],c=n.html;return a!==e._v$&&S(s,e._v$=a),c!==e._v$2&&(s.innerHTML=e._v$2=c),e},{_v$:void 0,_v$2:void 0}),s})(),I=W,X=`<pre class="hljs"><code><span class="hljs-keyword">import</span> { <span class="hljs-keyword">type</span> <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;solid-js&#x27;</span>;
<span class="hljs-keyword">const</span> <span class="hljs-title class_">App</span>: <span class="hljs-title class_">Component</span> = <span class="hljs-function">() =&gt;</span> {
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-line&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-line&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-line&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;32px&quot;</span> /&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
  );
};

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span>;
</code></pre>
`,Y=`<pre class="hljs"><code><span class="hljs-keyword">import</span> { <span class="hljs-keyword">type</span> <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;solid-js&#x27;</span>;
<span class="hljs-keyword">const</span> <span class="hljs-title class_">App</span>: <span class="hljs-title class_">Component</span> = <span class="hljs-function">() =&gt;</span> {
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-fill&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;32px&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;blue&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-fill&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;32px&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;red&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">SIcon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home-smile-2-fill&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;32px&quot;</span> <span class="hljs-attr">gradient</span>=<span class="hljs-string">&quot;linear-gradient(45deg, yellow, green)&quot;</span> /&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
  );
};

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span>;
</code></pre>
`,Z=$('<div><div><div flex items-center justify-between><h3>SIcon图标</h3><div><span hover:text-blue-600 text-gray cursor-pointer mr-4>code</span></div></div><span text-sub>SIcon based on</span><a text-14px text-blue-600 ml-1 href="https://github.com/Remix-Design/RemixIcon" target="-blank">Remixicon</a><h4>图标尺寸</h4><div class="children:mr-2"></div><h4>图标颜色(支持渐变色)</h4><div class="children:mr-2">');function ns(){const n=[{name:"tsx",path:"components/SIcon/index.tsx"},{name:"scss",path:"components/SIcon/index.scss"}],[s,e]=j(!1);return(()=>{const a=Z(),c=a.firstChild,r=c.firstChild,_=r.firstChild,g=_.nextSibling,x=g.firstChild,b=r.nextSibling,u=b.nextSibling,t=u.nextSibling,o=t.nextSibling,h=o.nextSibling,p=h.nextSibling;return x.$$click=()=>e(!0),l(g,i(U,{path:"SIcon",name:"source"}),null),l(o,i(m,{name:"home-smile-2-line"}),null),l(o,i(m,{name:"home-smile-2-line",size:"24px"}),null),l(o,i(m,{name:"home-smile-2-line",size:"32px"}),null),l(c,i(I,{html:X}),h),l(p,i(m,{name:"home-smile-2-fill",size:"32px",color:"blue"}),null),l(p,i(m,{name:"home-smile-2-fill",size:"32px",color:"red"}),null),l(p,i(m,{name:"home-smile-2-fill",size:"32px",gradient:"linear-gradient(45deg, yellow, green)"}),null),l(c,i(I,{html:Y}),null),l(a,i(G,{get show(){return s()},tabs:n,onCancel:()=>e(!1)}),null),a})()}k(["click"]);export{ns as default};
