/* stylelint-disable no-descending-specificity */

$small-width: 40px;
$small-height: 20px;
$medium-width: 48px;
$medium-height: 24px;
$large-width: 56px;
$large-height: 28px;
$trans-duration: 0.2s;
$padding: 4px;

// color variables
$primary-color-200: #d7b6fd;
$primary-color-500: #8749f5;
$unchecked-color: #c9c8c8;
$unchecked-hover-color: #cfcece;
$unchecked-disabled-color: #e4e0e0;

@mixin s-switch-size($width, $height) {
  width: $width;
  height: $height;
  border-radius: calc($height / 2);

  --gap: 6px;
  .s-switch__track {
    width: calc($height - var(--gap));
    height: calc($height - var(--gap));
  }
  input:checked ~ .s-switch__track {
    transform: translateX(calc($width - $height + var(--gap) - 2 * $padding));
    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 20%);
  }
}

.s-switch {
  display: inline-flex;
  align-items: center;
  position: relative;
  padding: $padding;
  outline: 0;
  box-sizing: border-box;
  cursor: pointer;
  background-color: $unchecked-color;
  transition: background-color $trans-duration;
  &:not(:has(input:disabled)):focus-visible {
    box-shadow: 0 0 0 2px $primary-color-200;
  }
  &:has(input:disabled)[class] {
    background-color: rgb($primary-color-500, 0.7);
    cursor: not-allowed;
  }
  &:has(input:disabled):not(:has(input:checked))[class] {
    background-color: $unchecked-disabled-color;
    cursor: not-allowed;
  }
  &:has(input:checked) {
    background-color: $primary-color-500;
  }
  &:hover:not(:has(input:disabled, input:checked)) {
    background-color: $unchecked-hover-color;
  }
  &:hover:not(:has(input:disabled)):has(input:checked) {
    background-color: rgb($primary-color-500, 0.9);
  }
  input {
    opacity: 0;
    position: absolute;
    margin: 0;
    top: 0;
    left: 0;
  }
  &__track {
    border-radius: 50%;
    background-color: #fff;
    transition: transform $trans-duration ease-in-out;
    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 12%);
  }
  &--small {
    @include s-switch-size($small-width, $small-height);
  }
  &--medium {
    @include s-switch-size($medium-width, $medium-height);
  }
  &--large {
    @include s-switch-size($large-width, $large-height);
  }
}
